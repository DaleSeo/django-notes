# Generated by Django 2.0.1 on 2018-01-27 03:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('notes', '0001_squashed_0002_auto_20180126_0448'), ('notes', '0002_post'), ('notes', '0003_posttag'), ('notes', '0004_auto_20180126_2351'), ('notes', '0005_auto_20180127_0237'), ('notes', '0006_auto_20180127_0321'), ('notes', '0007_auto_20180127_0329'), ('notes', '0008_auto_20180127_0333')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('file', models.CharField(blank=True, max_length=255, null=True)),
                ('hits', models.IntegerField(default=0)),
                ('kind', models.CharField(blank=True, max_length=31, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=45, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.AddField(
            model_name='note',
            name='tags',
            field=models.ManyToManyField(related_name='notes', to='notes.Tag'),
        ),
    ]
